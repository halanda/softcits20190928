试想在银行办理业务。
a 场景
	1. 叫号
	2. 取钱
	3. 服务评价

b 场景
	1. 叫号
	2. 办卡
	3. 服务评价

c 场景
	1. 叫号
	2. 转账
	3. 服务评价

Version 1.0 的问题
	1. 重复代码多
	2. 代码冗余带来今后修改成本过高

设计模式开篇	
第一种： 模板模式
Version 2.0 模板模式
	抽象类里定义相同的方法和程序流程，子类里实现各自具体的算法。
	
	
面向对象的三大特性OOP:
	第一个: 封装
	第二个: 继承
	第三个: 多态