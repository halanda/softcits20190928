default 关键字, 接口里使用，默认方法带有方法体，子类就不会强制重写该方法

final 关键字：
	1.如果修饰变量的话，变量必须在声明时赋值，今后不可再改变其值
	2. 如果修饰方法的话，子类不能重写该方法
	3. 如果修饰类的话，就没有子类了 
	
static修饰的变量属于类级别，所以所有的对象都共有该变量
	      修饰的类级别变量只会执行一次 -》 同理静态代码块也会只执行一次
	     修饰方法，该方法属于类级别 
	     //类.静态方法
		 Person.getNum();
	  静态方法只能访问静态变量:
	  	错误演示：
	  	private Integer num = 0;
	  	public static Integer getNum() {
		return num;}
	
	静态方法只能访问静态方法，不能访问普通方法：
	普通方法可以通过类.静态方法的方式访问，但是不赞成使用this.静态方法,因为this是对象级别而静态方法是类级别

代码块/静态代码块：详见代码

Man继承Person
	Man man = new Man(); //在新建man对象时会发生什么
	
	1. person父类的静态初始化代码块调用
	2. man子类的静态初始化代码块调用
	3. person父类的构造器调用
	4. man子类的构造器调用

总结static的使用：
	1. 可以修饰变量 -> 类变量
	2. 可以修饰方法 -> 类。方法	
	3.可以修饰代码块 -> 在类的构造器之前执行，并且仅会执行一次
	
	
函数调用时参数传递：
	1. 基本类型 则是数据的拷贝 并不会改变该基本类型变量的值 -> 传值
	2. 引用类型 则是引用传递 会改变该引用变量的值 -> 传址
	
	
	
	
	